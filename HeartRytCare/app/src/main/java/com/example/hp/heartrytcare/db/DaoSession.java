package com.example.hp.heartrytcare.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.hp.heartrytcare.db.Journal;
import com.example.hp.heartrytcare.db.Medication;
import com.example.hp.heartrytcare.db.Appointment;
import com.example.hp.heartrytcare.db.HeartRateData;
import com.example.hp.heartrytcare.db.BloodPressureData;
import com.example.hp.heartrytcare.db.LimitValues;

import com.example.hp.heartrytcare.db.JournalDao;
import com.example.hp.heartrytcare.db.MedicationDao;
import com.example.hp.heartrytcare.db.AppointmentDao;
import com.example.hp.heartrytcare.db.HeartRateDataDao;
import com.example.hp.heartrytcare.db.BloodPressureDataDao;
import com.example.hp.heartrytcare.db.LimitValuesDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig journalDaoConfig;
    private final DaoConfig medicationDaoConfig;
    private final DaoConfig appointmentDaoConfig;
    private final DaoConfig heartRateDataDaoConfig;
    private final DaoConfig bloodPressureDataDaoConfig;
    private final DaoConfig limitValuesDaoConfig;

    private final JournalDao journalDao;
    private final MedicationDao medicationDao;
    private final AppointmentDao appointmentDao;
    private final HeartRateDataDao heartRateDataDao;
    private final BloodPressureDataDao bloodPressureDataDao;
    private final LimitValuesDao limitValuesDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        journalDaoConfig = daoConfigMap.get(JournalDao.class).clone();
        journalDaoConfig.initIdentityScope(type);

        medicationDaoConfig = daoConfigMap.get(MedicationDao.class).clone();
        medicationDaoConfig.initIdentityScope(type);

        appointmentDaoConfig = daoConfigMap.get(AppointmentDao.class).clone();
        appointmentDaoConfig.initIdentityScope(type);

        heartRateDataDaoConfig = daoConfigMap.get(HeartRateDataDao.class).clone();
        heartRateDataDaoConfig.initIdentityScope(type);

        bloodPressureDataDaoConfig = daoConfigMap.get(BloodPressureDataDao.class).clone();
        bloodPressureDataDaoConfig.initIdentityScope(type);

        limitValuesDaoConfig = daoConfigMap.get(LimitValuesDao.class).clone();
        limitValuesDaoConfig.initIdentityScope(type);

        journalDao = new JournalDao(journalDaoConfig, this);
        medicationDao = new MedicationDao(medicationDaoConfig, this);
        appointmentDao = new AppointmentDao(appointmentDaoConfig, this);
        heartRateDataDao = new HeartRateDataDao(heartRateDataDaoConfig, this);
        bloodPressureDataDao = new BloodPressureDataDao(bloodPressureDataDaoConfig, this);
        limitValuesDao = new LimitValuesDao(limitValuesDaoConfig, this);

        registerDao(Journal.class, journalDao);
        registerDao(Medication.class, medicationDao);
        registerDao(Appointment.class, appointmentDao);
        registerDao(HeartRateData.class, heartRateDataDao);
        registerDao(BloodPressureData.class, bloodPressureDataDao);
        registerDao(LimitValues.class, limitValuesDao);
    }
    
    public void clear() {
        journalDaoConfig.getIdentityScope().clear();
        medicationDaoConfig.getIdentityScope().clear();
        appointmentDaoConfig.getIdentityScope().clear();
        heartRateDataDaoConfig.getIdentityScope().clear();
        bloodPressureDataDaoConfig.getIdentityScope().clear();
        limitValuesDaoConfig.getIdentityScope().clear();
    }

    public JournalDao getJournalDao() {
        return journalDao;
    }

    public MedicationDao getMedicationDao() {
        return medicationDao;
    }

    public AppointmentDao getAppointmentDao() {
        return appointmentDao;
    }

    public HeartRateDataDao getHeartRateDataDao() {
        return heartRateDataDao;
    }

    public BloodPressureDataDao getBloodPressureDataDao() {
        return bloodPressureDataDao;
    }

    public LimitValuesDao getLimitValuesDao() {
        return limitValuesDao;
    }

}
